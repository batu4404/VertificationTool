(declare-fun n_0 () Int)
(declare-fun sum_0 () Int)
(declare-fun sum_1 () Int)
(declare-fun sum_2 () Int)
(declare-fun sum_3 () Int)
(declare-fun sum_4 () Int)
(declare-fun sum_5 () Int)
(declare-fun sum_6 () Int)
(declare-fun i_0 () Int)
(declare-fun i_1 () Int)
(declare-fun i_2 () Int)
(declare-fun i_3 () Int)
(declare-fun i_4 () Int)
(declare-fun i_5 () Int)
(declare-fun i_6 () Int)
(declare-fun return () Int)
(assert (= sum_0 0))
(assert (= i_0 0))
(assert (and (=> (<= i_0 n_0) (and (and (= sum_1 (+ sum_0 i_0)) (= i_1 (+ i_0 1))) (and (=> (<= i_1 n_0) (and (and (= sum_2 (+ sum_1 i_1)) (= i_2 (+ i_1 1))) (and (=> (<= i_2 n_0) (and (and (= sum_3 (+ sum_2 i_2)) (= i_3 (+ i_2 1))) (and (=> (<= i_3 n_0) (and (and (= sum_4 (+ sum_3 i_3)) (= i_4 (+ i_3 1))) (and (=> (<= i_4 n_0) (and (and (= sum_5 (+ sum_4 i_4)) (= i_5 (+ i_4 1))) (and (=> (<= i_5 n_0) (and (= sum_6 (+ sum_5 i_5)) (= i_6 (+ i_5 1)))) (=> (not (<= i_5 n_0)) (and (= sum_6 sum_5) (= i_6 i_5)))))) (=> (not (<= i_4 n_0)) (and (= sum_6 sum_4) (= i_6 i_4)))))) (=> (not (<= i_3 n_0)) (and (= sum_6 sum_3) (= i_6 i_3)))))) (=> (not (<= i_2 n_0)) (and (= sum_6 sum_2) (= i_6 i_2)))))) (=> (not (<= i_1 n_0)) (and (= sum_6 sum_1) (= i_6 i_1)))))) (=> (not (<= i_0 n_0)) (and (= sum_6 sum_0) (= i_6 i_0)))))
(assert (= return sum_6))
(assert (and (>= n_0 0) (< n_0 6)))
(assert (not (< return (div (* n_0 (+ n_0 1)) 2))))
(check-sat)
(get-model)